---
# lighthouse-service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: lighthouse-service
  labels:
    app.kubernetes.io/name: lighthouse-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    app.kubernetes.io/version: {{ .Values.lighthouseService.image.tag | default .Chart.AppVersion }}
    helm.sh/chart: {{ include "control-plane.chart" . }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: lighthouse-service
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  {{- include "control-plane.common.update-strategy" . | nindent 2 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lighthouse-service
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
        app.kubernetes.io/component: {{ include "control-plane.name" . }}
        app.kubernetes.io/version: {{ .Values.lighthouseService.image.tag | default .Chart.AppVersion }}
        helm.sh/chart: {{ include "control-plane.chart" . }}
    spec:
      {{- include "control-plane.common.pod-security-context" . | nindent 6 }}
      containers:
        - name: lighthouse-service
          image: {{ .Values.lighthouseService.image.repository }}:{{ .Values.lighthouseService.image.tag | default .Chart.AppVersion }}
          {{- $prestop := .Values.lighthouseService.preStopHookTime | default 90 | quote -}}
          {{- include "control-plane.prestop" $prestop | nindent 10 }}
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "1Gi"
              cpu: "200m"
          env:
            - name: EVENTBROKER
              value: 'http://localhost:8081/event'
            - name: CONFIGURATION_SERVICE
              value: 'http://configuration-service:8080'
            - name: MONGODB_DATASTORE
              value: 'mongodb-datastore:8080'
            - name: ENVIRONMENT
              value: 'production'
            - name: K8S_DEPLOYMENT_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/name'']'
            - name: K8S_DEPLOYMENT_VERSION
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/version'']'
            - name: K8S_DEPLOYMENT_COMPONENT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: 'metadata.labels[''app.kubernetes.io/component'']'
            - name: K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: PUBSUB_GROUP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.labels['app.kubernetes.io/name']
            - name: LOG_LEVEL
              value: {{ .Values.logLevel | default "info" }}
          {{- include "control-plane.common.container-security-context" . | nindent 10 }}
      serviceAccountName: keptn-lighthouse-service
      terminationGracePeriodSeconds: {{ .Values.lighthouseService.gracePeriod | default 120 }}
      {{- include "keptn.nodeSelector" (dict "value" .Values.lighthouseService.nodeSelector "default" .Values.common.nodeSelector "indent" 6 "context" . )}}
---
apiVersion: v1
kind: Service
metadata:
  name: lighthouse-service
  labels:
    app.kubernetes.io/name: lighthouse-service
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/part-of: keptn-{{ .Release.Namespace }}
    app.kubernetes.io/component: {{ include "control-plane.name" . }}
    helm.sh/chart: {{ include "control-plane.chart" . }}
spec:
  ports:
    - port: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: lighthouse-service
    app.kubernetes.io/instance: {{ .Release.Name }}
